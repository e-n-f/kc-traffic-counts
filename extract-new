#!/usr/bin/perl

use strict;

my @lines;
my @argv;
while (<>) {
	chomp;
	push @lines, $_;
	push @argv, $ARGV;
}

my $date = "";
my $name = "";
my $street = "";
my $directions = "";
my $turns = "";

my $i;
for ($i = 0; $i <= $#lines; $i++) {
	if ($lines[$i] =~ /Start Date:\s*(.*)/) {
		$date = $1;
		$date =~ s/,/ /g;
	}

	my $group = "x";

	if ($lines[$i] =~ /Turning Movement Data\s*$/ ||
	    $lines[$i] =~ /Groups Printed-?\s*(.*)/) {
		my @directions = ();

		if ($lines[$i] =~ /Turning Movement Data/) {
			$i++;

			if ($lines[$i] eq "Start Time") {
				$i++;
			}

			$street = $lines[$i];
			$street =~ s/,/ /g;
			$i++;

			$directions = $lines[$i];
			$i++;
			@directions = split(/ /, $directions);
		} else {  # Groups Printed
			$i++;
			$group = $1;

			my %street = ();
			$street = "";
			for (; $i <= $#lines; $i++) {
				last if $lines[$i] =~ /Start Time/;

				if ($lines[$i] =~ /^(North|South|East|West)bound$/ ||
				    $lines[$i] =~ /^(Northeast|Southeast|Northwest|Southwest)bound$/ ||
				    $lines[$i] =~ /^From (North|South|East|West)$/ ||
				    $lines[$i] =~ /^From (Northeast|Southeast|Northwest|Southwest)$/) {
					push @directions, $lines[$i];
				} else {
					$street{$lines[$i]} = 1;
				}
			}

			for (keys(%street)) {
				$street .= "$_ ";
			}
		}

		$turns = $lines[$i];
		$turns =~ s/^Start Time //;
		$i++;
		while (! ($lines[$i] =~ /\d+/)) {
			$turns .= " $lines[$i]";
			$i++;
		}
		$turns =~ s/App. Total/App.Total/g;
		$turns =~ s/Int. Total/Int.Total/g;
		$turns =~ s/Exclu. Total/Exc.Total/g;
		$turns =~ s/Inclu. Total/Inc.Total/g;
		my @turns = split(/ /, $turns);

		# print "street $street\n";
		# print "directions $directions\n";
		# print "turns $turns\n";

		my %count = ();

		for (; $i <= $#lines; $i++) {
			if ($lines[$i] =~ s/\s*(\d+):(\d+) (.M)?\s*//) {  # will also pick up ^L-prefixed
				my $hour = $1;
				my $minute = $2;
				my $m = $3;

				if ($m eq "PM" && $hour != 12) {
					$hour += 12;
				}
				my $when = $hour * 60 + $minute;

				last if defined($count{$when});

				my @fields = split(/ +/, $lines[$i]);
				if ($#fields != $#turns) {
					print STDERR "$argv[$i]: Mismatched fields ($#fields) and turns ($#turns)\n";
					print STDERR "$argv[$i]: turns are $turns\n";
					print STDERR "$argv[$i]: fields are $lines[$i]\n";
				} else {
					my $state = 0;
					my $direction = 0;
					my $j;
					for ($j = 0; $j <= $#fields; $j++) {
						if ($turns[$j] =~ /Total/) {
							$state = 1;
						} elsif ($state == 1) {
							$state = 0;
							$direction++;
						} elsif (defined($count{$when}{$directions[$direction]}{$turns[$j]})) {
							$state = 0;
							$direction++;
						}

						# print "count{$when}{$directions[$direction]}{$turns[$j]} = $fields[$j]\n";
						$count{$when}{$directions[$direction]}{$turns[$j]} = $fields[$j];
					}
				}
			} elsif ($lines[$i] =~ /Hourly Total/) {
				;
			} else {
				last;
			}
		}

		for my $when (sort {$a <=> $b } (keys(%count))) {
			print "$argv[$i],$street,$group,$date,";
			printf("%02d:%02d-%02d:%02d,", $when / 60, $when % 60, ($when + 15) / 60, ($when + 15) % 60);

			for my $direction ('Southbound', 'Westbound', 'Northbound', 'Eastbound') {
				for my $turn ('Right', 'Thru', 'Left') {
					print "$count{$when}{$direction}{$turn},";
					delete $count{$when}{$direction}{$turn};
				}
			}

			for my $turn ('Peds', 'Bikes') {
				for my $direction ('Southbound', 'Westbound', 'Northbound', 'Eastbound') {
					print "$count{$when}{$direction}{$turn},";
					delete $count{$when}{$direction}{$turn};
				}
			}

			print ",,";

			for my $direction (keys(%{$count{$when}})) {
				for my $turn (keys(%{$count{$when}{$direction}})) {
					next if $turn =~ /Total/;
					next if $turn =~ /U-Turn/;

					print "$direction:$turn:$count{$when}{$direction}{$turn},";
				}
			}

			print "\n";
		}
	}
}
